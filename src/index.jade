doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Ponte

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel="stylesheet", type='text/css', href="bower_components/font-awesome/css/font-awesome.min.css")
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    // endbuild

  body

    article

      section
        img(src="images/ponte.png" style="width: 100%")
        h3 <a href="http://twitter.com/matteocollina">@matteocollina</a>
        h3 <a href="http://mcollina.github.io/ponte_demo">http://mcollina.github.io/ponte_demo</a>

      section
        h2 Ponte
        h3 exposes devices

        ul
          li through HTTP "/resources/&lt;your thing&gt;"
          li through CoAP "/r/&lt;your thing&gt;"
          li through MQTT "&lt;your thing&gt;"

      section
        h2 The temperature in my hand
        h3 MQTT style
        pre
          code(data-bespoke-autorun).language-javascript.
            var client = mqtt.createClient();

            client.subscribe("sensortag/temperature");

            client.on("message", function(topic, payload) {
              alert([topic, payload].join(": "));
              client.end();
            });

      section
        h2 The temperature in my hand
        h3 HTTP style (with CORS)

        pre
          code(data-bespoke-autorun).language-javascript.
            var xhr = new XMLHttpRequest();
            var url = "http://localhost:3000/resources"
                       + "/sensortag/temperature";


            xhr.open("GET", url, true);
            xhr.onload = function() {
              alert(xhr.responseText);
            };
            xhr.send();

      section(data-bespoke-state='sensortag')
        h2 SensorTag
        ul.bullet
          li Bluetooth Low Energy
          li Works with your iPhone, Android or Laptop
          li It has its own node.js module!
          li works even as an iBeacon
          li 25$ shipping included..
          li by Texas Instruments

      section
        h2 Slide control using MQTT
        ul.bullet
          li The SensorTag is connected via BLE to a node program
          li The button press events are published to topics 'deck/{next|prev}'
          li This web app is connected via WebSocket to the MQTT broker..
          li ..and triggers the sliding API.

      section
        h2 A humidity sensor!
        p
          i.fa.fa-umbrella.fa-5x
          | &nbsp;
          span#humidity.sensor-data
          | &nbsp; %RH

      section
        h2 Infrared Temperature Sensor
        p
          | Object: &nbsp;
          span#ir-object.sensor-data
          | &nbsp; °C
        p
          | Ambient: &nbsp;
          span#ir-ambient.sensor-data
          | &nbsp; °C

      section
        h2 Let's get physical!

      section
        h2 OpenPicus Flyport
        img(src="images/flyport.png", style="width: 100%")
        ul.bullet
          li from prototype to production
          li real time and low power
          li development time reduction with the free IDE

      section
        h2 Controlling a led bar
        h3 MQTT+WebSocket style

        form.disabled
          input#ledbar(type="number")


      section
        h2 Controlling a led bar
        h3 HTTP style (with CORS)

        pre
          code(data-bespoke-autorun).language-javascript.
            var xhr = new XMLHttpRequest();
            var url = "http://localhost:3000/resources"
                       + "/groove/ledbar";


            xhr.open("PUT", url, true);
            xhr.setRequestHeader("Content-Type", "octet-stream")
            xhr.onload = function() {
              alert("Done!!!");
            };
            xhr.send("{ \"value\": 99 }");

      section
        h2 Sensing a slider
        p
          i.fa.fa-chevron-circle-right.fa-5x
          | &nbsp;
          span#slider.sensor-data

      section
        h2 Controlling the leds!
        div(style="clear: both")
          i#led-red.fa.fa-lightbulb-o
          i#led-green.fa.fa-lightbulb-o
          i#led-blue.fa.fa-lightbulb-o
          span#led-disable.fa-stack
            i.fa.fa-lightbulb-o.fa-stack-1x
            i.fa.fa-ban.fa-5x.fa-stack-2x.text-danger

      section
        h2 All together!
        pre
          code(data-bespoke-run).language-javascript.
            var client = mqtt.createClient();

            client.subscribe("groove/slider");
            client.subscribe("groove/button");

            client.on("message", function(topic, payload) {
              if (topic === "groove/slider")
                client.publish('groove/ledbar', JSON.stringify({
                  value: JSON.parse(payload).value / 10
                }))
              if (topic === "groove/button")
                return client.end();
            });
        a(data-bespoke-run) Run!

      section
        h2 Special Thanks
        ul
          li OpenPicus http://www.openpicus.com
          li Stefano Saccuci https://www.linkedin.com/in/stefanosaccucci

      section.full-imgs
        img(src='images/me.png')
        h3
          a(href='http://github.com/mcollina') http://github.com/mcollina

      section
        h1 Thanks!
        br
        p If you need help with node.js or the IoT:
        br
        h3 <a href="mailto:hello@matteocollina.com">hello@matteocollina.com</a>
        h3 <a href="http://twitter.com/matteocollina">@matteocollina</a> on Twitter
        h3 <a href="http://www.matteocollina.com">www.matteocollina.com</a>

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-run/dist/bespoke-run.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/bundle.js')
    script(src='scripts/main.js')
    // endbuild
